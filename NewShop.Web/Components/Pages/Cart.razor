@inject BasketServiceClient BasketClient
@inject NavigationManager Navigation

<style>
    .cart-badge {
        display: flex;
        padding: 0.25rem;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 0.25rem;
        position: absolute;
        right: -0.5rem;
        top: 1rem;
        border-radius: 20px;
        border: 1px solid #000;
        background: #000;
        color: #FFF;
        font-size: 0.75rem;
        font-style: normal;
        font-weight: 400;
        line-height: 0.25rem;
    }
</style>

<div class="justify-content-end">
    @if (basketIsAvailable)
    {
        <a aria-label="cart" href="cart">
            <img role="presentation" src="icons/cart.svg" />
            <span class="cart-badge">
                @(customerBasket?.TotalItemCount ?? 0)
            </span>
        </a>
    }
</div>

@code {
    CustomerBasket? customerBasket;
    bool basketIsAvailable;

    [Parameter]
    public EventCallback<bool> BasketAvailabilityChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        (customerBasket, basketIsAvailable) = await BasketClient.GetBasketAsync("user");

        await BasketAvailabilityChanged.InvokeAsync(basketIsAvailable);
    }

    private async Task HandleCheckout()
    {
        if (customerBasket is not null)
        {
            await BasketClient.CheckoutBasketAsync("user");
        }

        // Preserve query string
        Navigation.NavigateTo($"/{new Uri(Navigation.Uri).Query}");
    }
}